# -*- coding:utf-8 -*-
import csv
import json
import codecs
import os
import string
import sys
import time
import urllib.request
from urllib.parse import quote
from builtins import object, float, range, int, len, open, list, str


class BaiDuPOI(object):
    def __init__(self, itemy, loc):
        self.itemy = itemy
        self.loc = loc

    def urls(self):
        api_key = baidu_api
        urls = []
        types = ["学校", "饭店", "加油站", "商场", "超级市场", "售票处", "电讯营业厅", "宾馆", "酒店","中餐厅","外国餐厅","小吃快餐店","蛋糕甜品店","咖啡厅","茶座","酒吧,星级酒店","快捷酒店","公寓式酒店","购物中心","百货商场","超市","便利店","家居建材","家电数码","商铺","集市,通讯营业厅","邮局","物流公司","售票处","洗衣店","图文快印店","照相馆","房产中介机构","公用事业","维修点","家政服务","殡葬服务","彩票销售点","宠物服务","报刊亭","公共厕所,美容","美发","美甲","美体,公园","动物园","植物园","游乐园","博物馆","水族馆","海滨浴场","文物古迹","教堂","风景区,度假村","农家院","电影院","KTV","剧院","歌舞厅","网吧","游戏场所","洗浴按摩","休闲广场","体育场馆","极限运动场所","健身中心","高等院校","中学","小学","幼儿园","成人教育","亲子教育","特殊教育学校","留学中介机构","科研机构","培训机构","图书馆","科技馆,新闻出版","广播电视","艺术团体","美术馆","展览馆","文化宫","综合医院","专科医院","诊所","药店","体检机构","疗养院","急救中心","疾控中心","汽车销售","汽车维修","汽车美容","汽车配件","汽车租赁","汽车检测场","飞机场","火车站","地铁站","地铁线路","长途汽车站","公交车站","公交线路","港口","停车场","加油加气站","服务区","收费站","桥","充电站","路侧停车位","银行","ATM","信用社","投资理财","典当行","写字楼","住宅区","宿舍","公司","园区","农林园艺","厂矿","中央机构","各级政府","行政单位","公检法机构","涉外机构","党派团体","福利机构","政治教育机构","高速公路出口","高速公路入口","机场出口","机场入口","车站出口","车站入口","停车场出入口","岛屿","山峰","水系"]
        for pages in range(0, 10):
            for type in types:
                url = 'http://api.map.baidu.com/place/v2/search?query=' + type + '&bounds=' + self.loc + '&page_size=20&page_num=' + str(
                pages) + '&output=json&ak=' + api_key
                urls.append(url)
        return urls

    def baidu_search(self):
        '''json_sel = []
        for url in self.urls():
            s = quote(url, safe=string.printable)
            json_obj = urllib.request.urlopen(s).read().decode('utf-8')
            data = json.loads(json_obj)
            for item in data['results']:
                jname = item["name"]
                jlat = item["location"]["lat"]
                jlng = item["location"]["lng"]
                js_sel = jname + ',' + str(jlat) + ',' + str(jlng)
                json_sel.append(js_sel)
        return json_sel
        '''
        data = []
        for url in self.urls():
            s = quote(url, safe=string.printable)
            json_obj = urllib.request.urlopen(s).read().decode('utf-8')
            data.append(json.loads(json_obj))
            time.sleep(1)  # 休眠1秒
        return data


class LocaDiv(object):
    def __init__(self, loc_all):
        self.loc_all = loc_all

    def lat_all(self):
        lat_sw = float(self.loc_all.split(',')[0])
        lat_ne = float(self.loc_all.split(',')[2])
        lat_list = []
        for i in range(0, int((lat_ne - lat_sw + 0.0001) / 0.001)):  # 0.1为网格大小，可更改
            lat_list.append(lat_sw + 0.001 * i)  # 0.05
        lat_list.append(lat_ne)
        return lat_list

    def lng_all(self):
        lng_sw = float(self.loc_all.split(',')[1])
        lng_ne = float(self.loc_all.split(',')[3])
        lng_list = []
        for i in range(0, int((lng_ne - lng_sw + 0.0001) / 0.001)):  # 0.2为网格大小，可更改
            lng_list.append(lng_sw + 0.001 * i)  # 0.2为网格大小，可更改
        lng_list.append(lng_ne)
        return lng_list

    def ls_com(self):
        l1 = self.lat_all()
        l2 = self.lng_all()
        ab_list = []
        for i in range(0, len(l1)):
            a = str(l1[i])
            for i2 in range(0, len(l2)):
                b = str(l2[i2])
                ab = a + ',' + b
                ab_list.append(ab)
        return ab_list

    def ls_row(self):
        l1 = self.lat_all()
        l2 = self.lng_all()
        ls_com_v = self.ls_com()
        ls = []
        for n in range(0, len(l1) - 1):
            for i in range(0 + len(l1) * n, len(l2) + (len(l2)) * n - 1):
                a = ls_com_v[i]
                b = ls_com_v[i + len(l2) + 1]
                ab = a + ',' + b
                ls.append(ab)
        return ls


if __name__ == '__main__':
    doc = open('result.csv', 'a+')
    writer = csv.writer(doc)

    # ak
    baidu_api = "BSe4PiP6XPPSUizZlNiaDe7g1qW9m5bx"  # 这里填入你的百度API的ak
    print("开始爬取数据，请稍等...")
    start_time = time.time()
    loc = LocaDiv('31.07,121.22,31.14,121.29')
    locs_to_use = loc.ls_row()

    for loc_to_use in locs_to_use:
        par = BaiDuPOI('学校', loc_to_use)  # 请修改爬取的类别
        '''
        a = par.baidu_search()
        for ax in a:
            writer.writerow(a)
       '''

        listdata = par.baidu_search()
        for resultIndex in range(len(listdata)):  # 提取返回的结果
            resultlist=listdata[resultIndex]["results"]
            for pIndex in  range(len(resultlist)):
                 writer.writerow(list(resultlist[pIndex].values()))

    doc.close()
    end_time = time.time()
    print("学校爬取完毕，用时%.2f秒" % (end_time - start_time))
